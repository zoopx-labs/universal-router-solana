name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.80.0
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build --workspace --locked
      - name: Test router
        run: cargo test -p zpx_router --locked
      - name: Rust fmt check
        run: cargo fmt --all -- --check
      - name: Rust clippy (zpx_router)
        run: cargo clippy -p zpx_router -- -D warnings
      - name: Golden vectors (EVM cross-check)
        shell: bash
        run: |
          if command -v forge >/dev/null 2>&1; then
            chmod +x scripts/gen-evm-vectors.sh
            ./scripts/gen-evm-vectors.sh
            cargo test -p zpx_router golden_vectors_if_present -- --ignored
          else
            echo "Foundry not installed; skipping EVM cross-check"
          fi
      - name: Install Python deps for generator
        run: |
          python3 -m pip install --upgrade pip
          # prefer pycryptodome (pure wheel) â€” avoid building legacy pysha3 C extension on runner
          python3 -m pip install pycryptodome
      - name: Generate golden vectors
        run: |
          python3 tools/generate_golden_vectors/generate.py > programs/zpx_router/tests/golden/hashes.json
      - name: cargo fmt check
        run: cargo fmt --all -- --check
      # Avoid running workspace-wide clippy: some workspace crates (other programs) use
      # Solana/Anchor cfg flags that cause `unexpected cfg` errors when clippy is run
      # across the whole workspace. We already run clippy for the important package(s)
      # above (zpx_router); add other packages explicitly if/when they are updated to
      # be compatible with workspace-wide clippy.
      - name: Run unit tests (zpx_router)
        run: cargo test -p zpx_router
      - name: Run program-tests (ignored)
        run: cargo test -p zpx_router --features program-test -- --ignored
