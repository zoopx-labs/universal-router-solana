name: Devnet Multisig Smoke (manual)

on:
  workflow_dispatch:
    inputs:
      program_id:
        description: 'Program ID to upgrade'
        required: true
        default: ''
      so_path:
        description: 'Path to the .so in the repo (relative)'
        required: true
        default: 'dist/zpx_router.so'
      confirm_upgrade:
        description: 'Must be set to yes to actually perform the upgrade (safety)'
        required: true
        default: 'no'

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust (for tests)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - name: Install solana CLI
        run: |
          curl -sSfL https://release.solana.com/stable/install | sh
          echo "${HOME}/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Decode authority key (from secret)
        env:
          DEVNET_AUTH_KEY_BASE64: ${{ secrets.DEVNET_AUTH_KEY_BASE64 }}
        run: |
          if [ -z "${DEVNET_AUTH_KEY_BASE64:-}" ]; then
            echo "Missing secret: DEVNET_AUTH_KEY_BASE64. Add a base64-encoded keypair file to repository secrets before running." >&2
            exit 1
          fi
          echo "$DEVNET_AUTH_KEY_BASE64" | base64 --decode > /tmp/upgrade_authority.json

      - name: Verify inputs & safety
        run: |
          echo "program_id=${{ github.event.inputs.program_id }}"
          echo "so_path=${{ github.event.inputs.so_path }}"
          if [ "${{ github.event.inputs.confirm_upgrade }}" != "yes" ]; then
            echo "confirm_upgrade must be set to 'yes' to run an actual upgrade. Failing safely." >&2
            exit 1
          fi

      - name: Run devnet smoke script
        env:
          SOLANA_CONFIG_FILE: ${{ github.workspace }}/solana.json
        run: |
          chmod +x scripts/run-devnet-smoke.sh
          ./scripts/run-devnet-smoke.sh --program-id "${{ github.event.inputs.program_id }}" --so-path "${{ github.event.inputs.so_path }}" --authority /tmp/upgrade_authority.json --cluster devnet --confirm

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: devnet-smoke-logs
          path: |
            test-logs
            /tmp/upgrade_authority.json
